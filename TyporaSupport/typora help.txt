[TOC]



## Typora 0.11.18 最后免费版本下载 + 特性简介

![img](typora help.assets/typora-cover.gif)

<center>Cover of Typora</center>

Typora 由 Abner Lee 开发，轻量级 Markdown 编辑器，与其他 Markdown 编辑器不同的是，Typora  没有采用源代码和预览双栏显示的方式，而是采用所见即所得编辑方式，可以即时预览，也可切换至源代码编辑模式。它有 OS  X、Windows、Linux 三个平台的版本，测试阶段是**完全免费**的。

> Markdown 是一种轻量级标记语言，允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML（或者 HTML）文档。与 Word 等富文本编辑器不同，Markdown 编辑器可以让使用者在双手不离开键盘对文本进行一定程度格式排版。

### Typora下载

据 Typora 官网 2021 年 11 月 27 日消息，Markdown 编辑器 Typora 在长时间的免费测试之后，正式推出了 1.0 正式版，并开始收费。

![img](typora help.assets/typora-purchase.png)

Typora正式版 1.0 开始收费，`0.11.18` 为最后免费版本。

Typora 本地 Markdown 编辑器 Windows macOS Linux 多平台 下载。

Typora官网： https://typora.io/    官网国内目前已无法访问。

- [Compressed-Typora 1.5.8 + Cracked](./Typora-cracked.rar)

> No compress pwd, otherwise download two themes for gifts

### typora优秀特性

#### 实时预览

我想很果断地下这个结论：到现在还不支持编辑界面实时预览的 Markdown 编辑器基本可以退出市场了。Typora  在这一方面显然已经领先了一大步——他们连 Markdown 语法的标记都在实时预览中消去了。当你离开正在编辑的有格式的文本段后，Typora  会自动隐藏 Markdown 标记，只留下**「所见即所得」**的美妙。*他们把这称为 Hybrid View。*

![img](typora help.assets/typora real-time preview.gif)所见即所得

为了防止一些程序 bug 的发生（虽然在我使用下来感到是很少的）导致格式问题无法修改，Typora 保留了一个**「源代码模式」**。你可以通过 `视图 - 源代码模式` 或左下角的 `</>` 按钮进入。

![img](typora help.assets/typora real-time preview2.gif)

#### 打字机模式和专注模式

**「打字机模式」**使得你所编辑的那一行永远处于屏幕正中。

**「专注模式」**使你正在编辑的那一行保留颜色，而其他行的字体呈灰色。

你可以在 `视图 - 专注模式 / 打字机模式` 中勾选使用这两个模式。

![img](typora help.assets/typora real-time preview3.gif)

#### 智能标点

我认为「智能标点」是比较有趣的一点。它可以自动帮你将不是很美观的直引号 `"` `'` 转化为更美观的弯引号 `“` `‘` `’` `”`。具体内容你可以在官方的 [这篇文档]

(http://support.typora.io/SmartyPants/) 中查看。关于直弯引号在 macOS 上如何输入你也可以看 [这篇文章](https://sspai.com/post/38342)。

#### 图片插入

Typora 的图片插入功能是广受好评的。要知道，Markdown 原生不太注重图片插入的功能，但你可以在 Typora 中：

- 直接使用 `右键 - 复制 Ctrl + V` 将网络图片、剪贴板图片复制到文档中
- 拖动本地图片到文档中

Typora 会自动帮你插入符合 Markdown 语法的图片语句，并给它加上标题。

#### 空格与换行

Typora 在空格与换行部分主要是使用 [CommonMark](http://www.commonmark.cn/w/) 作为标注规范。与前文提到的 GFM 一样，CommonMark 也是比较流行的 Markdown 语言规范（解析器）之一。

- **空格：**在输入连续的空格后，Typora 会在编辑器视图里为你保留这些空格，但当你打印或导出时，这些空格会被省略成一个。
   你可以在源代码模式下，为每个空格前加一个 `\` 转义符，或者直接使用 HTML 风格的 `&nbps;` 来保持连续的空格。
- ==**软换行：**需要说明的是，在 Markdown 语法中，换行（line break）与换段是不同的。且换行分为软换行和硬换行。在 Typora 中，你可以通过 `Shift + Enter` 完成一次软换行。软换行只在编辑界面可见，当文档被导出时换行会被省略。==
- ==**硬换行：**你可以通过 `空格 + 空格 + Shift + Enter` 完成一次硬换行，而这也是许多 Markdown 编辑器所原生支持的。硬换行在文档被导出时将被保留，且没有换段的段后距。==
- ==**换段：**你可以通过 `Enter` 完成一次换段。Typora 会自动帮你完成两次 `Shift + Enter` 的软换行，从而完成一次换段。这也意味着在 Markdown 语法下，换段是通过在段与段之间加入空行来实现的。==
- **Windows 风格（CR+LF）与 Unix 风格（CR）的换行符：**CR 表示回车 `\r` ，即回到一行的开头，而 LF 表示换行 `\n` ，即另起一行。
   所以 Windows 风格的换行符本质是「回车 + 换行」，而 Unix 风格的换行符是「换行」。这也是为什么 Unix / Mac 系统下的文件，如果在 Windows 系统直接打开会全部在同一行内。 你可以在 `文件 - 偏好设置 - 编辑器 - 默认换行符` 中对此进行切换。

下附以上各空格、换行、换段的测试结果图。具体内容你可以在官网的 [这篇文档](http://support.typora.io/Line-Break/) 中查阅。

![img](typora help.assets/typora-preview.png)

#### 大纲 / 文件侧边栏

![img](typora help.assets/typora-preview2.png)

Typora 会根据你 Markdown 标记的 H1、H2、H3…… 各级标题为你呈现一个大纲。
 你也可以选择查看文件夹中的文件，但由于目前 Typora 只支持查看 md 文件。

#### 伪装成文本编辑器的浏览器

当我的一个朋友问我「Typora 有什么好写的？」时，我回答「Typora 是一个伪装成文本编辑器的浏览器」。是的，事实上如果你有一定的计算机基础，你可以找到许多有关于「Typora 其实是一个浏览器」的蛛丝马迹。

![img](typora help.assets/typora-simulate.png)

图片插入

在图片插入的选项中，Typora 用了「复制图片到 ./${filename}.assets 文件夹」的说法，而这其实是网页前端常用的 Javascript 字符串模板语法的风格。

再比如，Typora 将更遵循 GFM 标准的 Markdown 语法模式称为「严格模式 Strict Mode」，这一说法常见于 HTML 和 JavaScript 编程中。类似「源代码模式」的说法也是同理。

当然，最明显的一点是当你按下 `Shift + F12` 快捷键时，页面会弹出一个基于 Chrome 的开发者工具栏，也就是我们在浏览器中常说的「审查元素」。

![img](typora help.assets/typora-simulate2.png)

##### 伪装从何而来？

当我们把视角放在「Typora 是一个支持 Markdown 语言的文本编辑器」的出发点来考虑这个问题，一切就都显得很明白了。

John Gruber 在 2004 年用 Perl 创造了 Markdown 语言，这个语言的目的是希望大家使用「易于阅读、易于撰写的纯文字格式，并选择性的转换成有效的 XHTML（或是 HTML）」。也就是说，**在 Markdown 诞生之初，它就是为了被浏览器阅读而设计的。**

我们在用 Markdown 语言撰写文稿的时候，其实本质上是在借助某种编程语言的转化（解析器）来编写一个 HTML 网页。Markdown 从它诞生之初就与 Web 技术有着及其紧密的联系。

如果我说，我们每一篇文稿都是一个网页，那就很好理解了。Typora 利用解析器先将我们写的 Markdown 文档解析成为 HTML 文档，再为它嵌入一个 CSS 样式，最后再加上可能需要的脚本等。

##### HTML

HTML 是一种标记语言，主要负责构成网页的骨架，它包含所有不加装饰的网页元素。在 Typora 的使用场景下则是所有的**文本、段落、标题等**的记号。

##### HTML 标签

Typora 支持许多常用的 HTML 标签，如果你了解 HTML 语法的话，你可以写出十分美观丰富的文档页面。

![img](typora help.assets/typora-html-label.png)

事实上你可以在 Typora 中完成许多基本的 HTML 风格的文本输入，例如 HTML 字符、HTML 块、HTML 风格的注释，甚至是视频和音频。具体支持的功能和限制请在 [官方文档](http://support.typora.io/HTML/) 中查阅。

有了这一功能，我们就可以在 Typora 中创造出远超普通 Markdown 文档的页面效果。

##### 导出为 HTML

Typora 原生支持将文档导出为 HTML 格式的文件，并选择是否要嵌入 style（也就是后文我将提到的 CSS 的部分）。

除此之外，由于其本身「浏览器」的属性，你可以直接在实时预览界面用 `Ctrl +C` 复制到 HTML 代码。一个实用的用处是将这些 HTML 代码直接 `Ctrl + V` 黏贴到微信公众号后台，基本可以保证两边显示效果相同。这一点不仅使公众号推送可以有更自由、美观的样式，也让编辑、排版更轻松了。（由于微信自带浏览器的一些特性，可能有少部分 CSS style 不能生效，建议多多校对。）

##### CSS

为了让文档更美观，我们可以为其加上 CSS style。我认为 Typora 对 CSS 的支持让它成为一众桌面笔记应用中最与众不同的一个。在 Typora 中 CSS 被称为「主题」，但其本质仍是 CSS 文件。你可以在 `文件 - 偏好设置 - 主题 - 打开主题文件夹` 看到这些 CSS 文件。

##### YAML front-matter

Typora 支持在文档头部加上基于 YAML 的 front-matter 信息，这一特性适用于把 Markdown 文档分类归档上传到用 Hexo 框架搭建的博客中。

------

### Typora Markdown

由于目前还没有一个权威机构对 Markdown 的语法进行规范，各应用厂商制作时遵循的 Markdown 语法也是不尽相同的。其中比较受到认可的是 [GFM 标准](https://github.github.com/gfm/)，它是由著名代码托管网站 [GitHub](https://github.com/) 所制定的。Typora 主要使用的也是 GFM 标准。同时，你还可以在 `文件 - 偏好设置 - Markdown 语法偏好 - 严格模式` 中将标准设置为「更严格地遵循 GFM 标准」。

#### 标题

\# 级标题 

\# 一级标题 快捷键为 Ctrl + 1

\## 二级标题 快捷键为 Ctrl + 2

......

\###### 六级标题 快捷键为 Ctrl + 6

#### 段落

在markdown中，段落由多个空格分隔。

##### 重新开始一个段落

- 源码模式中，重新开始一个段落是段落后面使用一个空行来表示。
- 在Typora渲染模式中，只需回车即可创建新段落。

​	我就是一段普通的文字。

​	我也是一段普通的文字。

##### 段落内换行

- 源码模式中，直接回车即可。
- 在Typora渲染模式中，在结尾使用`Shift + Enter`。
- 使用html的换行标签

​	这段文字需要段内换行，这后面是两个空格。
 ​	这一句话是跟上面属于同一段落。

​	这段文字需要段内换行，这后面是html的换行标签
​	这一句话是跟上面属于同一段落。

#### 列表

##### 无序列表

使用 `*` `+ ` `- `都可以创建一个无序列表

- AAA
- BBB
- CCC

##### 有序列表

使用 1. 2. 3. 创建有序列表

1. AAA
2. BBB
3. CCC

##### 嵌套列表

首先使用`*`、`+`或`-`进入列表，然后回车换行，会发现系统自动生成列表第二项，此时按下**Tab**键，列表第二项变为第一项的子列表。**按回车退出当前列表**。可以在无序列表中嵌套有序列表。

#### 引用文字

\> + 空格 + 引用文字

语法说明如下。

1. 多行引用也可以在每一行的开头都插入>。
2. 在引用中可以嵌套引用。
3. 在引用中可以使用其他的Markdown语法。
4. 段落与换行的格式在引用中也是适用的。

\> 我是引用的句子。

> 引用中可以嵌套引用
>
> > 我是引用中嵌套引用

> 引用中使用其他 Markdown 标记[百度](https://baidu.com)    第二行，**加粗**和*斜体*也是支持的，第二行前面有4个空格

#### 代码块

在Typora中插入程序代码的方式有两种：使用反引号 `（~ 键）、使用缩进（Tab）。

- 插入行内代码，即插入一个单词或者一句代码的情况，使用 `code` 这样的形式插入。
- 插入多行代码输入3个反引号（`） + 回车，并在后面选择一个语言名称即可实现语法高亮。

```none
def helloworld():
    print("hello, world!")
```

#### 字体

##### 斜体

使用 `*单个星号*` 或者 `_单下划线_` 可以字体倾斜。快捷键 `Ctrl + I`
 *斜体*

##### 加粗

使用 `**两个星号**` 或者 `__两个下划线__` 可以字体加粗。快捷键 `Ctrl + B`
 **加粗**

##### 加粗斜体

使用`***加粗斜体***`可以加粗斜体。
 ***加粗斜体\***

##### 代码标记

标记代码使用反引号，即在英文输入法下，ESC键下面和1键左边的符号。
 使用该 `printf()`功能

##### 删除线

使用`~~删除线~~` 快捷键 `Alt + Shift + 5`
 删除线

##### 下划线

通过`<u>下划线的内容</u>` 或者 快捷键`Ctrl + U`可实现下划线
 下划线的内容

#### 任务列表

\- [ ] 不勾选

\- [x] 勾选

#### 插入表格

输入 `| 表头1 | 表头2 |`并回车。即可创建一个包含2列表。快捷键 `Ctrl + T`弹出对话框。

| id   | number |
| ---- | ------ |
|      |        |

- 不管是哪种方式，第一行为表头，第二行为分割表头和主体部分，第三行开始每一行为一个表格行
- 列与列之间用管道符号`|` 隔开
- 还可设置对齐方式(表头与内容之间)，如果不使用对齐标记，内容默认左对齐，表头居中对齐
  - 左对齐 ：|
  - 右对齐 |：
  - 中对齐 ：|：
- 为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用 | 来标记单元格边界
- 为了使 Markdown 更清晰，| 和 - 两侧需要至少有一个空格（最左侧和最右侧的 | 外就不需要了）。

#### 目录（TOC）

输入 `[toc]` 然后回车，即可创建一个“目录”。TOC从文档中提取所有标题，其内容将自动更新。

> Typora支持TOC自动生成目录，博客园不支持？

#### 链接

##### 内部链接

这是一个带有标题属性的 `[链接](http://example.com/ "标题")`

这是一个没有标题属性的 `[链接](http://example.net/)`

[链接](http://example.com/)

[链接](http://example.net/)

##### 参考链接

这是一个[参考链接]id -- 无法执行

#### 网址

Typora允许用<括号括起来>, 把URL作为链接插入。
 <www.baidu.com>

Typora还会自动链接标准网址。
 www.baidu.com

#### 图片

```none
![显示的文字](C:\Users\Hider\Desktop\echart.png "图片标题")
![显示的文字](C:\Users\Hider\Desktop\echart.png)
```

除了以上2种方式之外，还可以直接将图片拖拽进来，自动生成链接。

#### 下标

(需在设置中打开该功能)
 H2O

#### 上标

(需在设置中打开该功能)
 X2

#### 高亮

`==高亮==`(需在设置中打开该功能)

==我是最重要的==

#### 文本居中

使用 `<center>这是要居中的内容</center>`可以使文本居中

<center>这是要居中的文本内容</center>

#### 转义

Markdown 支持以下这些符号前面加上反斜杠`\`来帮助插入普通的符号：

```none
\   反斜线
`   反引号
*   星号
_   下划线
{}  花括号
[]  方括号
()  小括号
#   井字号
+   加号
-   减号
.   英文句点
!   感叹号
```

#### 分割线

输入 `***` 或者 `---` 再按回车即可绘制一条水平线，如下：

------

#### HTML

不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。

```html
<h5 id="center-标签">center 标签</h5>
<center>居中</center>
<h5 id="font-标签">font 标签</h5>
<p><font face="黑体" size="5">我是黑体字</font><br>
<font color="red" size="6">颜色</font></p>
<h5 id="span-标签">span 标签</h5>
<p><span style="color: rgba(255, 0, 0, 1)"> 颜色</span><br>
<span style="color: rgba(255, 0, 0, 1); font-size: 22px">&nbsp;字体大小</span></p>
<h5 id="p-标签">p 标签</h5>
<p align="center"> 居中对齐</p>
<p align="left"> 左对齐</p>
<p align="center"> 右对齐</p>
<h5 id="kbd-标签">kbd 标签</h5>
<p><kbd>显示按钮</kbd></p>
<h5 id="注释">注释</h5>
```

[引用自孤逐王blog(原著未知)](https://www.cnblogs.com/wonux/p/15693229.html)

